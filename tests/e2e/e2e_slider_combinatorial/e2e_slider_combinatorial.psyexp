<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2021.1.0">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': '', 'session': '001'}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="fileList"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="False" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1680, 1050]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[0,0,0]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="e2e_slider_combinatorial" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="intro_trial">
      <TextComponent name="text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="e2e_slider&amp;#10;&amp;#10;This experiment presents 64 sliders, formed by a combining of each of the 6 style settings. Tap/click on the slider to make a marker appear. Next, drag it around to change your answer. Finally, tap the square&amp;#10; at the bottom to continue to the next slider.&amp;#10;&amp;#10;Click anywhere to continue..." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <MouseComponent name="mouse">
        <Param name="clickable" updates="constant" val="" valType="code"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutineOnPress" updates="constant" val="any click" valType="str"/>
        <Param name="name" updates="None" val="mouse" valType="code"/>
        <Param name="newClicksOnly" updates="constant" val="True" valType="bool"/>
        <Param name="saveMouseState" updates="None" val="final" valType="str"/>
        <Param name="saveParamsClickable" updates="constant" val="name," valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
        <Param name="timeRelativeTo" updates="constant" val="mouse onset" valType="str"/>
      </MouseComponent>
      <CodeComponent name="code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="document.body.setAttribute('data-report', 'intro_trial');" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="document.body.setAttribute('data-trialsdata', JSON.stringify(psychoJS.experiment._trialsData));&amp;#10;document.body.setAttribute('data-report', 'FINISHED');" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="slider_trial_2">
      <SliderComponent name="slider_2">
        <Param name="borderColor" updates="constant" val="White" valType="color"/>
        <Param name="color" updates="constant" val="LightGray" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="Red" valType="color"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="HelveticaBold" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="granularity" updates="constant" val="0" valType="code"/>
        <Param name="labels" updates="constant" val="&quot;left&quot;, &quot;right&quot;" valType="list"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="num"/>
        <Param name="name" updates="None" val="slider_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.3)" valType="code"/>
        <Param name="readOnly" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1.0, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styleTweaks" updates="constant" val="[]" valType="list"/>
        <Param name="styles" updates="constant" val="['rating']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <PolygonComponent name="button_2">
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="0" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="button_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="rectangle" valType="str"/>
        <Param name="size" updates="constant" val="(0.1, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <CodeComponent name="code_3">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="document.body.setAttribute('data-report', 'slider_trial_2');" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_3" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="slider_trial_1">
      <SliderComponent name="slider">
        <Param name="borderColor" updates="constant" val="White" valType="color"/>
        <Param name="color" updates="constant" val="LightGray" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="Red" valType="color"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="HelveticaBold" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="0" valType="code"/>
        <Param name="labels" updates="constant" val="&quot;left&quot;, &quot;right&quot;" valType="list"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="num"/>
        <Param name="name" updates="None" val="slider" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="readOnly" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1.0, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styleTweaks" updates="constant" val="[]" valType="list"/>
        <Param name="styles" updates="constant" val="['rating']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <PolygonComponent name="button">
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="0" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="button" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="rectangle" valType="str"/>
        <Param name="size" updates="constant" val="(0.1, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <CodeComponent name="code_2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="sliderStyle = [];&amp;#10;if ((style_rating === &quot;x&quot;)) {&amp;#10;    sliderStyle.push(visual.Slider.Style.RATING);&amp;#10;}&amp;#10;if ((style_triangleMarker === &quot;x&quot;)) {&amp;#10;    sliderStyle.push(visual.Slider.Style.TRIANGLE_MARKER);&amp;#10;}&amp;#10;if ((style_slider === &quot;x&quot;)) {&amp;#10;    sliderStyle.push(visual.Slider.Style.SLIDER);&amp;#10;}&amp;#10;if ((style_whiteOnBlack === &quot;x&quot;)) {&amp;#10;    sliderStyle.push(visual.Slider.Style.WHITE_ON_BLACK);&amp;#10;}&amp;#10;if ((style_labels45 === &quot;x&quot;)) {&amp;#10;    sliderStyle.push(visual.Slider.Style.LABELS45);&amp;#10;}&amp;#10;if ((style_radio === &quot;x&quot;)) {&amp;#10;    sliderStyle.push(visual.Slider.Style.RADIO);&amp;#10;}&amp;#10;console.log(sliderStyle);&amp;#10;style_text.text = sliderStyle.map(function(s) {return s.toString()}).join(' ');&amp;#10;try {&amp;#10;    slider.style = sliderStyle;&amp;#10;} catch(e) {&amp;#10;    style_text.text = (style_text.text + &quot; FAIL&quot;);&amp;#10;}&amp;#10;document.body.setAttribute('data-report', 'slider_trial_' + counter);" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="sliderStyle = []&amp;#10;if style_rating == 'x':&amp;#10;    sliderStyle.append('rating')&amp;#10;if style_triangleMarker == 'x':&amp;#10;    sliderStyle.append('triangleMarker')&amp;#10;if style_slider == 'x':&amp;#10;    sliderStyle.append('slider')&amp;#10;if style_whiteOnBlack  == 'x':&amp;#10;    sliderStyle.append('whiteOnBlack')&amp;#10;if style_labels45 == 'x':&amp;#10;    sliderStyle.append('labels45')&amp;#10;if style_radio == 'x':&amp;#10;    sliderStyle.append('radio')&amp;#10;&amp;#10;print(sliderStyle)&amp;#10;style_text.text = ' '.join(sliderStyle)&amp;#10;try:&amp;#10;    slider.style = sliderStyle&amp;#10;except:&amp;#10;    style_text.text = style_text.text + ' FAIL' &amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_2" valType="code"/>
      </CodeComponent>
      <TextComponent name="style_text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="style_text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Any text&amp;#10;&amp;#10;including line breaks" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <MouseComponent name="mouse_2">
        <Param name="clickable" updates="constant" val="button" valType="code"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutineOnPress" updates="constant" val="valid click" valType="str"/>
        <Param name="name" updates="None" val="mouse_2" valType="code"/>
        <Param name="newClicksOnly" updates="constant" val="True" valType="bool"/>
        <Param name="saveMouseState" updates="None" val="final" valType="str"/>
        <Param name="saveParamsClickable" updates="constant" val="name," valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
        <Param name="timeRelativeTo" updates="constant" val="mouse onset" valType="str"/>
      </MouseComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="intro_trial"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('rating', 'x'), ('triangleMarker', 'x'), ('slider', 'x'), ('whiteOnBlack', 'x'), ('labels45', 'x'), ('radio', 'x')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'x'), ('slider', 'x'), ('whiteOnBlack', 'x'), ('labels45', 'x'), ('radio', 'o')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'x'), ('slider', 'x'), ('whiteOnBlack', 'x'), ('labels45', 'o'), ('radio', 'x')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'x'), ('slider', 'x'), ('whiteOnBlack', 'x'), ('labels45', 'o'), ('radio', 'o')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'x'), ('slider', 'x'), ('whiteOnBlack', 'o'), ('labels45', 'x'), ('radio', 'x')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'x'), ('slider', 'x'), ('whiteOnBlack', 'o'), ('labels45', 'x'), ('radio', 'o')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'x'), ('slider', 'x'), ('whiteOnBlack', 'o'), ('labels45', 'o'), ('radio', 'x')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'x'), ('slider', 'x'), ('whiteOnBlack', 'o'), ('labels45', 'o'), ('radio', 'o')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'x'), ('slider', 'o'), ('whiteOnBlack', 'x'), ('labels45', 'x'), ('radio', 'x')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'x'), ('slider', 'o'), ('whiteOnBlack', 'x'), ('labels45', 'x'), ('radio', 'o')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'x'), ('slider', 'o'), ('whiteOnBlack', 'x'), ('labels45', 'o'), ('radio', 'x')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'x'), ('slider', 'o'), ('whiteOnBlack', 'x'), ('labels45', 'o'), ('radio', 'o')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'x'), ('slider', 'o'), ('whiteOnBlack', 'o'), ('labels45', 'x'), ('radio', 'x')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'x'), ('slider', 'o'), ('whiteOnBlack', 'o'), ('labels45', 'x'), ('radio', 'o')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'x'), ('slider', 'o'), ('whiteOnBlack', 'o'), ('labels45', 'o'), ('radio', 'x')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'x'), ('slider', 'o'), ('whiteOnBlack', 'o'), ('labels45', 'o'), ('radio', 'o')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'o'), ('slider', 'x'), ('whiteOnBlack', 'x'), ('labels45', 'x'), ('radio', 'x')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'o'), ('slider', 'x'), ('whiteOnBlack', 'x'), ('labels45', 'x'), ('radio', 'o')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'o'), ('slider', 'x'), ('whiteOnBlack', 'x'), ('labels45', 'o'), ('radio', 'x')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'o'), ('slider', 'x'), ('whiteOnBlack', 'x'), ('labels45', 'o'), ('radio', 'o')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'o'), ('slider', 'x'), ('whiteOnBlack', 'o'), ('labels45', 'x'), ('radio', 'x')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'o'), ('slider', 'x'), ('whiteOnBlack', 'o'), ('labels45', 'x'), ('radio', 'o')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'o'), ('slider', 'x'), ('whiteOnBlack', 'o'), ('labels45', 'o'), ('radio', 'x')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'o'), ('slider', 'x'), ('whiteOnBlack', 'o'), ('labels45', 'o'), ('radio', 'o')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'o'), ('slider', 'o'), ('whiteOnBlack', 'x'), ('labels45', 'x'), ('radio', 'x')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'o'), ('slider', 'o'), ('whiteOnBlack', 'x'), ('labels45', 'x'), ('radio', 'o')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'o'), ('slider', 'o'), ('whiteOnBlack', 'x'), ('labels45', 'o'), ('radio', 'x')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'o'), ('slider', 'o'), ('whiteOnBlack', 'x'), ('labels45', 'o'), ('radio', 'o')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'o'), ('slider', 'o'), ('whiteOnBlack', 'o'), ('labels45', 'x'), ('radio', 'x')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'o'), ('slider', 'o'), ('whiteOnBlack', 'o'), ('labels45', 'x'), ('radio', 'o')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'o'), ('slider', 'o'), ('whiteOnBlack', 'o'), ('labels45', 'o'), ('radio', 'x')]), OrderedDict([('rating', 'x'), ('triangleMarker', 'o'), ('slider', 'o'), ('whiteOnBlack', 'o'), ('labels45', 'o'), ('radio', 'o')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'x'), ('slider', 'x'), ('whiteOnBlack', 'x'), ('labels45', 'x'), ('radio', 'x')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'x'), ('slider', 'x'), ('whiteOnBlack', 'x'), ('labels45', 'x'), ('radio', 'o')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'x'), ('slider', 'x'), ('whiteOnBlack', 'x'), ('labels45', 'o'), ('radio', 'x')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'x'), ('slider', 'x'), ('whiteOnBlack', 'x'), ('labels45', 'o'), ('radio', 'o')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'x'), ('slider', 'x'), ('whiteOnBlack', 'o'), ('labels45', 'x'), ('radio', 'x')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'x'), ('slider', 'x'), ('whiteOnBlack', 'o'), ('labels45', 'x'), ('radio', 'o')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'x'), ('slider', 'x'), ('whiteOnBlack', 'o'), ('labels45', 'o'), ('radio', 'x')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'x'), ('slider', 'x'), ('whiteOnBlack', 'o'), ('labels45', 'o'), ('radio', 'o')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'x'), ('slider', 'o'), ('whiteOnBlack', 'x'), ('labels45', 'x'), ('radio', 'x')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'x'), ('slider', 'o'), ('whiteOnBlack', 'x'), ('labels45', 'x'), ('radio', 'o')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'x'), ('slider', 'o'), ('whiteOnBlack', 'x'), ('labels45', 'o'), ('radio', 'x')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'x'), ('slider', 'o'), ('whiteOnBlack', 'x'), ('labels45', 'o'), ('radio', 'o')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'x'), ('slider', 'o'), ('whiteOnBlack', 'o'), ('labels45', 'x'), ('radio', 'x')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'x'), ('slider', 'o'), ('whiteOnBlack', 'o'), ('labels45', 'x'), ('radio', 'o')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'x'), ('slider', 'o'), ('whiteOnBlack', 'o'), ('labels45', 'o'), ('radio', 'x')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'x'), ('slider', 'o'), ('whiteOnBlack', 'o'), ('labels45', 'o'), ('radio', 'o')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'o'), ('slider', 'x'), ('whiteOnBlack', 'x'), ('labels45', 'x'), ('radio', 'x')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'o'), ('slider', 'x'), ('whiteOnBlack', 'x'), ('labels45', 'x'), ('radio', 'o')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'o'), ('slider', 'x'), ('whiteOnBlack', 'x'), ('labels45', 'o'), ('radio', 'x')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'o'), ('slider', 'x'), ('whiteOnBlack', 'x'), ('labels45', 'o'), ('radio', 'o')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'o'), ('slider', 'x'), ('whiteOnBlack', 'o'), ('labels45', 'x'), ('radio', 'x')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'o'), ('slider', 'x'), ('whiteOnBlack', 'o'), ('labels45', 'x'), ('radio', 'o')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'o'), ('slider', 'x'), ('whiteOnBlack', 'o'), ('labels45', 'o'), ('radio', 'x')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'o'), ('slider', 'x'), ('whiteOnBlack', 'o'), ('labels45', 'o'), ('radio', 'o')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'o'), ('slider', 'o'), ('whiteOnBlack', 'x'), ('labels45', 'x'), ('radio', 'x')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'o'), ('slider', 'o'), ('whiteOnBlack', 'x'), ('labels45', 'x'), ('radio', 'o')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'o'), ('slider', 'o'), ('whiteOnBlack', 'x'), ('labels45', 'o'), ('radio', 'x')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'o'), ('slider', 'o'), ('whiteOnBlack', 'x'), ('labels45', 'o'), ('radio', 'o')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'o'), ('slider', 'o'), ('whiteOnBlack', 'o'), ('labels45', 'x'), ('radio', 'x')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'o'), ('slider', 'o'), ('whiteOnBlack', 'o'), ('labels45', 'x'), ('radio', 'o')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'o'), ('slider', 'o'), ('whiteOnBlack', 'o'), ('labels45', 'o'), ('radio', 'x')]), OrderedDict([('rating', 'o'), ('triangleMarker', 'o'), ('slider', 'o'), ('whiteOnBlack', 'o'), ('labels45', 'o'), ('radio', 'o')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="conditions.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="slider_trial_1"/>
    <LoopTerminator name="trials"/>
    <Routine name="slider_trial_2"/>
  </Flow>
</PsychoPy2experiment>
