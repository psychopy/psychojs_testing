name: e2e test all_devices
on:
  schedule:
    - cron: '5 8 * * sun'
  workflow_dispatch:

env:
  BROWSERSTACK_ACCESSKEY: ${{ secrets.BROWSERSTACK_ACCESSKEY }}
  BROWSERSTACK_USER: ${{ secrets.BROWSERSTACK_USER }}
  STAGING_PASSWORD: ${{ secrets.STAGING_PASSWORD }}
  STAGING_PORT: ${{ secrets.STAGING_PORT }}
  STAGING_USERNAME: ${{ secrets.STAGING_USERNAME }}

jobs:
  prepare:
    name: Sync with GitHub, delete old logs, and get tests
    runs-on: ubuntu-latest
    outputs:
      tests: ${{steps.get_tests.outputs.tests}} 
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-:  
      - name: Install modules
        run: npm ci
      - name: Turnstyle (wait for other workflows to complete)
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Sync BS logs and Stager with GitHub 
        run: node tests/cli/syncWithGitHub.cjs alain sotiri thomas
      - name: Delete old test logs 
        run: node tests/cli/deleteLogs.cjs --testrun all_devices
      - name: Get tests
        id: get_tests
        run: echo "::set-output name=tests::$(node tests/cli/tabulateTests.cjs --label all --outputFormat paths)"
      - name: test1
        run: echo *
      - name: test2
        run: echo \*
      - name: test3
        run: echo '*'
      - name: test4
        run: echo '\*'
      - name: test5
        run: echo "*"
      - name: test6
        run: echo "\*"
      - name: testnode1
        run: node --platform *
      - name: testnode2
        run: node --platform \*
      - name: testnode3
        run: node --platform '*'
      - name: testnode4
        run: node --platform '\*'
      - name: testnode5
        run: node --platform "*"
      - name: testnode6
        run: node --platform "\*"
