name: e2e test all_devices
on:
  schedule:
    - cron: '5 8 * * sun'
  workflow_dispatch:

env:
  BROWSERSTACK_ACCESSKEY: ${{ secrets.BROWSERSTACK_ACCESSKEY }}
  BROWSERSTACK_USER: ${{ secrets.BROWSERSTACK_USER }}
  STAGING_PASSWORD: ${{ secrets.STAGING_PASSWORD }}
  STAGING_PORT: ${{ secrets.STAGING_PORT }}
  STAGING_USERNAME: ${{ secrets.STAGING_USERNAME }}
  PSYCHOJS_PATH: 'psychojs'

jobs:
  prepare:
    name: Sync with GitHub, delete old logs, and get tests
    runs-on: ubuntu-latest
    outputs:
      tests: ${{steps.get_tests.outputs.tests}} 
    steps:
      # START: install this repo
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Checkout this repo
        uses: actions/checkout@v2
      - name: Cache node modules of this repo
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-this
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-:  
      - name: Install modules of this repo
        run: npm ci
      # END: install this repo
      
      - name: Turnstyle (wait for other workflows to complete)
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Sync BS logs and Stager with GitHub 
        run: node tests/cli/syncWithGitHub.cjs alain sotiri thomas
      - name: Delete old test logs 
        run: node tests/cli/deleteLogs.cjs --testrun all_devices
      - name: Get tests
        id: get_tests
        run: echo "::set-output name=tests::$(node tests/cli/tabulateTests.cjs --label all --outputFormat paths)"
  e2e_tests:
    name: Test 
    needs: [prepare]
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      max-parallel: 1
      matrix: 
        test: ${{fromJson(needs.prepare.outputs.tests)}}
    steps:
      # START: install this repo
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Checkout this repo
        uses: actions/checkout@v2
      - name: Cache node modules of this repo
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-this
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-:  
      - name: Install modules of this repo
        run: npm ci
      # END: install this repo
      
      # START: install psychojs
      - name: Checkout psychojs repo
        uses: actions/checkout@v2
        with:
          repository: tpronk/psychojs
          path: psychojs
      - name: Cache node modules of psychojs repo
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-psychojs
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-:  
      # END: install psychojs
       
      - name: Turnstyle (wait for other workflows to complete)
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run test ${{ matrix.test }}
        run: node test.cjs --server bs --testrun all_devices --label ${{ matrix.test }} --url pavlovia --platform \* --uploadReport
        # run: npx wdio tests/shared/wdio.conf.cjs --server bs --testrun all_devices --label ${{ matrix.test }} --url pavlovia --platform *Windows*10* --uploadReport
  join_reports:
    name: Join reports
    needs: [e2e_tests]
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      # START: install this repo
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Checkout this repo
        uses: actions/checkout@v2
      - name: Cache node modules of this repo
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-this
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-:  
      - name: Install modules of this repo
        run: npm ci
      # END: install this repo
      
      - name: Turnstyle (wait for other workflows to complete)
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Join reports
        run: node tests/cli/joinReports.cjs --testrun all_devices
